/* # Rétablissement du flux */

/*
http://nicolasgallagher.com/micro-clearfix-hack/
*/

@mixin smash-clearfix
{
	//zoom: 1;
	
	&:before,
	&:after
	{
		content: '';
		display: table;
	}
	&:after
	{
		clear: both;
	}
}

/* # _Reset_ (et sa version surchargée) */

@mixin smash-reset
{
	margin:  0;
	padding: 0;
	border:  0;
	background-color: transparent; // pour les boutons
	list-style-type: none; // pour les listes
}

@mixin smash-reset-i
{
	margin:  0 !important;
	padding: 0 !important;
	border:  0 !important;
	background-color: transparent !important; // pour les boutons
	list-style-type: none !important; // pour les listes
}


/* # Contenu masqué visuellement (et sa version surchargée) */

/*
https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
*/

@mixin smash-visually-hidden
{
	position: absolute;
	padding: 0;
	border:  0;
	height:  1px;
	width:   1px;
	overflow: hidden;
	clip: rect(1px  1px  1px  1px);
	clip: rect(1px, 1px, 1px, 1px);
}

@mixin smash-visually-hidden-i
{
	position: absolute !important;
	padding: 0 !important;
	border:  0 !important;
	height:  1px !important;
	width:   1px !important;
	overflow: hidden !important;
	clip: rect(1px  1px  1px  1px) !important;
	clip: rect(1px, 1px, 1px, 1px) !important;
}

/* Et la possibilité de le ré-afficher (et sa version surchargée) */

@mixin smash-visually-visible
{
	position:  static;
	height:      auto;
	width:       auto;
	clip:        auto;
	overflow: visible;
}

@mixin smash-visually-visible-i
{
	position:  static !important;
	height:      auto !important;
	width:       auto !important;
	clip:        auto !important;
	overflow: visible !important;
}

/* # Survol des liens */

/* Pas de soulignement par défaut, puis soulignement au survol ou au focus. */

@mixin smash-deco-roll
{
	text-decoration: none;
	
	&:hover,
	&:focus
	{
		text-decoration: underline;
	}
}

/* Ou soulignement par défaut, puis pas de soulignement au survol ou au focus. */

@mixin smash-deco-unroll
{
	text-decoration: underline;
	
	&:hover,
	&:focus
	{
		text-decoration: none;
	}
}

/* # Étirement des blocs */

@mixin smash-stretch($smash-length: 0)
{
	position: absolute;
	
	left:   $smash-length;
	top:    $smash-length;
	bottom: $smash-length;
	right:  $smash-length;
		
/* Avec une option pour positionner une image centrée quelque soit ça taille. */
		
	@if smash-strip-unit($smash-length) < -999
	{
		margin: auto;
	}
}

/* # Calculs typographiques cumulés sur un bloc */

/* Joue sur la taille de texte, la marge basse et la hauteur de ligne. */

@mixin smash-typo($smash-fs, $smash-unit: $smash-prefered-unit, $smash-context: $smash-fs0, $smash-margin: true)
{
	font-size:     smash-size($smash-fs, $smash-unit, $smash-context);
	//line-height:   smash-size(smash-lines($smash-fs) * $smash-lh, $smash-unit, $smash-fs);
	line-height:   smash-size($smash-fs + 10px, $smash-unit, $smash-fs);

	@if $smash-margin == true 
	{
		margin-bottom: smash-size($smash-lh, $smash-unit, $smash-fs);
	}
}

/* # Grille via flexbox */

/* Génère un contexte flexbox en colonnes et la possibilité de fusionner ces colonnes. */

/* http://www.alsacreations.com/tuto/lire/1659-une-grille-responsive-avec-flexbox-et-LESS.html */

@mixin smash-grid-flex($smash-nb-cols: $smash-cols-desktop)
{
	& > *
	{
		flex-basis: 100% / $smash-nb-cols;
	}

	$smash-i: $smash-nb-cols;
	
	@while $smash-i > 1
	{
		&_span-#{$smash-i}
		{
			flex-basis: (100% / $smash-nb-cols) * $smash-i;
	
			$smash-i: $smash-i - 1;
		}
	}
}

/* # Répétition d’un selecteur */

/* Pour surcharger sans pour autant passer par `!important`. (À éviter néanmoins.) */

@mixin smash-repeat($smash-select: '', $smash-i: 1)
{
	@if $smash-i > 1
	{
		@include repeat($smash-select, $smash-i - 1)
		{
			&.#{$smash-prefix-framework}#{$smash-select}
			{
				@content;
			}
		}
	}
	@else
	{
		&#{$smash-select}
			{
				@content;
			}
	}
}

/* # Centrage pour les grilles fluides */

@mixin smash-grid-center($smash-cols: $smash-cols-desktop)
{
	max-width: smash-size(smash-grid-cols-width($smash-cols));
	
	@if $smash-external-gutters and $smash-box-sizing
	{
		max-width: smash-size((smash-grid-cols-width($smash-cols) + $smash-gutter * 2));    
	}
}

/* # Conteneur pour les grilles fluides */

@mixin smash-grid-fluid($smash-cols-contexte: $smash-cols-desktop)
{
	@if $smash-external-gutters and not $smash-fluid-gutter-fixed
	{
		@warn 'Combination of fluid grid, external gutters and fixed gutter is not supported. ';
	}

	@if $smash-fluid-gutter-fixed
	{
		margin-left:  smash-size($smash-gutter / -2);
		margin-right: smash-size($smash-gutter / -2);
	}
	@else
	{
		margin-left:  smash-percent($smash-gutter / -2, smash-grid-cols-width($smash-cols-contexte));
		margin-right: smash-percent($smash-gutter / -2, smash-grid-cols-width($smash-cols-contexte));
	}
	
	@include smash-clearfix;
}

@mixin smash-grid-fluid-positioned($smash-cols-contexte: $smash-cols-desktop)
{
	@if $smash-external-gutters and not $smash-fluid-gutter-fixed
	{
		@warn 'Combination of fluid grid, external gutters and fixed gutter is not supported. ';
	}

	@if $smash-fluid-gutter-fixed
	{
		left:  smash-size($smash-gutter / -2);
		right: smash-size($smash-gutter / -2);
	}
	@else
	{
		left:  smash-percent($smash-gutter / -2, smash-grid-cols-width($smash-cols-contexte));
		right: smash-percent($smash-gutter / -2, smash-grid-cols-width($smash-cols-contexte));
	}
	
	@include smash-clearfix;
}

/* # Colonnes pour les grilles fluides */

@mixin smash-grid-fluid-col($smash-cols-nb, $smash-cols-offset: null, $smash-cols-context: $smash-cols-desktop, $smash-context: $smash-fs0)
{
	float: left;
	
	background-clip: content-box;

	@if $smash-fluid-gutter-fixed
	{
		box-sizing: border-box;
		
		padding-left:  smash-size($smash-gutter / 2, $smash-context);
		padding-right: smash-size($smash-gutter / 2, $smash-context);
		
		width: smash-percent($smash-cols-nb * $smash-col, $smash-cols-context * $smash-col);  
	}
	@else
	{
		box-sizing: content-box;
	
		padding-left:  smash-percent($smash-gutter / 2,                     (smash-grid-cols-width($smash-cols-context) + $smash-gutter));
		padding-right: smash-percent($smash-gutter / 2,                     (smash-grid-cols-width($smash-cols-context) + $smash-gutter));
		width:         smash-percent(smash-grid-cols-width($smash-cols-nb), (smash-grid-cols-width($smash-cols-context) + $smash-gutter));
	}
	
/* Avec la technique de l’isolation possible. */  
	
	@if $smash-cols-offset
	{
		margin-right: -100%;
		
		@if $smash-fluid-gutter-fixed
		{
			margin-left: smash-percent(($smash-col) * ($smash-cols-offset - 1), ($smash-cols-context * $smash-col));
		}
		@else
		{
			margin-left: smash-percent(($smash-col + $smash-gutter) * ($smash-cols-offset - 1), (smash-grid-cols-width($smash-cols-context) + $smash-gutter));
		}
	}
}

/* # Utilitaire pour les colonnes fluides */

@mixin smash-grid-fluid_cols($smash-inside: 1, $smash-outside: $smash-cols-desktop)
{
	@for $smash-i from 1 through ($smash-outside / $smash-inside)
	{
		&:nth-child(#{$smash-outside / $smash-inside}n + #{$smash-i})
		{
			@include smash-grid-fluid-col($smash-inside, ($smash-inside * ($smash-i - 1) + 1), $smash-outside);
			
			@if $smash-i == 1
			{
				clear: left;
			}
		}  
	}
}

/* # Utilitaire pour la fonction calc() */

@mixin smash-calc($property, $expression)
{
	#{$property}: -webkit-calc(#{$expression}); 
	#{$property}: calc(#{$expression}); 
} 

@mixin rm-retina()
{
	@media 
	(-webkit-min-device-pixel-ratio: 2), 
	(min-resolution: 192dpi) { 
	    /* Retina-specific stuff here */
	    @content;
	}
}

/* # Vertical media queries */

@mixin smash-mq-max-height($viewport_height: $mq-desktop-max-height, $smash-contexte: $smash-fs0, $smash-unit: $smash-prefered-unit)
{
	@media (max-height: smash-size($viewport_height, 'em', $smash-bfs) - .01em ) 
	{
		@content;
	}
}

@mixin smash-mq-min-height($viewport_height: $mq-desktop-max-height, $smash-contexte: $smash-fs0, $smash-unit: $smash-prefered-unit)
{
	@media (min-height: smash-size($viewport_height, 'em', $smash-bfs) ) 
	{
		@content;
	}
}